import os
import lit.util
import lit.formats

# From libcxx lit: Tell pylint that we know config and lit_config exist somewhere.
if 'PYLINT_IMPORT' in os.environ:
    config = object()
    lit_config = object()

config.name = "CaPISelectionTest"

loaded_site_cfg = getattr(config, 'loaded_site_config', False)
if not loaded_site_cfg:
  # Check for 'site_config' user parameter, and use that if available.
  site_cfg = lit_config.params.get('site_config', None)
  if site_cfg and os.path.exists(site_cfg):
    lit_config.load_config(config, site_cfg)
    raise SystemExit

config.test_format = lit.formats.ShTest(execute_external=True)
config.suffixes = ['.cpp']
config.excludes = ['08_destructor_call_path.cpp'] # Excluded for now, because of inconsistent behavior across MetaCG versions

filecheck_exe = getattr(config, 'filecheck_exe', None)
cgc_exe = getattr(config, 'cgc_exe', None)
capi_exe = getattr(config, 'capi_exe', None)
clang_include_dir = getattr(config, 'clang_include_dir', None)

config.substitutions.append(('%filecheck', filecheck_exe))
config.substitutions.append(('%cgc', cgc_exe))
config.substitutions.append(('%capi', capi_exe))
config.substitutions.append(('%clang_include_dir', clang_include_dir))



